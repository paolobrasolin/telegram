# frozen_string_literal: true

module Telegram
  module API
    module Bot
      module Methods
        # See the {{ "{" }}{{ method.url }} official documentation}.
        #
{%- if method.parameters == empty %}
        def {{ method.snake_name }}
          Types::Response.new(
{%- if method.result_caster %}
            result_caster: {{ method.result_caster -}},{%- endif %}
            **Client.post(
              url: build_url('{{ method.camel_name }}'),
              parameters: {}
            )
          )
        end
{%- else -%}
{%- for parameter in method.parameters %}
        # @param {{parameter.snake_name}} [{{parameter.signature}}]
{%- endfor %}
        def {{ method.snake_name }}(
{%- for parameter in method.parameters %}
          {{ parameter.snake_name }}:
            {%- unless parameter.required %} nil{% endunless -%}
            {%- unless parameter == method.parameters.last %},{% endunless %}
{%- endfor %}
        )
          Types::Response.new(
{%- if method.result_caster %}
            result_caster: {{ method.result_caster -}},{%- endif %}
            **Client.post(
              url: build_url('{{ method.camel_name }}'),
              parameters: {
{%- for parameter in method.parameters %}
                {{ parameter.snake_name }}: {{ parameter.snake_name -}}
                {%- unless parameter == method.parameters.last %},{% endunless %}
{%- endfor %}
              }
            )
          )
        end
{%- endif %}
      end
    end
  end
end
