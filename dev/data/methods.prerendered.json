[
  {
    "url": "https://core.telegram.org/bots/api#getupdates",
    "snake_name": "get_updates",
    "camel_name": "getUpdates",
    "pascal_name": "GetUpdates",
    "parameters": [
      {
        "snake_name": "offset",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(offset&.to_i unless offset.nil?)"
      },
      {
        "snake_name": "limit",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(limit&.to_i unless limit.nil?)"
      },
      {
        "snake_name": "timeout",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(timeout&.to_i unless timeout.nil?)"
      },
      {
        "snake_name": "allowed_updates",
        "required": false,
        "signature": "Array<String>, nil",
        "caster": "(allowed_updates&.to_a&.map { |o| o&.to_s } unless allowed_updates.nil?)"
      }
    ],
    "result_caster": "->(r) { r&.to_a&.map { |o| Types::Update.new(**o.to_h) } }"
  },
  {
    "url": "https://core.telegram.org/bots/api#setwebhook",
    "snake_name": "set_webhook",
    "camel_name": "setWebhook",
    "pascal_name": "SetWebhook",
    "parameters": [
      {
        "snake_name": "url",
        "required": true,
        "signature": "String",
        "caster": "url&.to_s"
      },
      {
        "snake_name": "certificate",
        "required": false,
        "signature": "InputFile, nil",
        "caster": "(certificate unless certificate.nil?)"
      },
      {
        "snake_name": "max_connections",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(max_connections&.to_i unless max_connections.nil?)"
      },
      {
        "snake_name": "allowed_updates",
        "required": false,
        "signature": "Array<String>, nil",
        "caster": "(allowed_updates&.to_a&.map { |o| o&.to_s } unless allowed_updates.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#deletewebhook",
    "snake_name": "delete_webhook",
    "camel_name": "deleteWebhook",
    "pascal_name": "DeleteWebhook",
    "parameters": [

    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#getwebhookinfo",
    "snake_name": "get_webhook_info",
    "camel_name": "getWebhookInfo",
    "pascal_name": "GetWebhookInfo",
    "parameters": [

    ],
    "result_caster": "->(r) { Types::WebhookInfo.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#getme",
    "snake_name": "get_me",
    "camel_name": "getMe",
    "pascal_name": "GetMe",
    "parameters": [

    ],
    "result_caster": "->(r) { Types::User.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendmessage",
    "snake_name": "send_message",
    "camel_name": "sendMessage",
    "pascal_name": "SendMessage",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "text",
        "required": true,
        "signature": "String",
        "caster": "text&.to_s"
      },
      {
        "snake_name": "parse_mode",
        "required": false,
        "signature": "String, nil",
        "caster": "(parse_mode&.to_s unless parse_mode.nil?)"
      },
      {
        "snake_name": "disable_web_page_preview",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_web_page_preview unless disable_web_page_preview.nil?)"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply, nil",
        "caster": "(reply_markup unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#forwardmessage",
    "snake_name": "forward_message",
    "camel_name": "forwardMessage",
    "pascal_name": "ForwardMessage",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "from_chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "from_chat_id"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "message_id",
        "required": true,
        "signature": "Integer",
        "caster": "message_id&.to_i"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendphoto",
    "snake_name": "send_photo",
    "camel_name": "sendPhoto",
    "pascal_name": "SendPhoto",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "photo",
        "required": true,
        "signature": "InputFile, String",
        "caster": "photo"
      },
      {
        "snake_name": "caption",
        "required": false,
        "signature": "String, nil",
        "caster": "(caption&.to_s unless caption.nil?)"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply, nil",
        "caster": "(reply_markup unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendaudio",
    "snake_name": "send_audio",
    "camel_name": "sendAudio",
    "pascal_name": "SendAudio",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "audio",
        "required": true,
        "signature": "InputFile, String",
        "caster": "audio"
      },
      {
        "snake_name": "caption",
        "required": false,
        "signature": "String, nil",
        "caster": "(caption&.to_s unless caption.nil?)"
      },
      {
        "snake_name": "duration",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(duration&.to_i unless duration.nil?)"
      },
      {
        "snake_name": "performer",
        "required": false,
        "signature": "String, nil",
        "caster": "(performer&.to_s unless performer.nil?)"
      },
      {
        "snake_name": "title",
        "required": false,
        "signature": "String, nil",
        "caster": "(title&.to_s unless title.nil?)"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply, nil",
        "caster": "(reply_markup unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#senddocument",
    "snake_name": "send_document",
    "camel_name": "sendDocument",
    "pascal_name": "SendDocument",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "document",
        "required": true,
        "signature": "InputFile, String",
        "caster": "document"
      },
      {
        "snake_name": "caption",
        "required": false,
        "signature": "String, nil",
        "caster": "(caption&.to_s unless caption.nil?)"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply, nil",
        "caster": "(reply_markup unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendvideo",
    "snake_name": "send_video",
    "camel_name": "sendVideo",
    "pascal_name": "SendVideo",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "video",
        "required": true,
        "signature": "InputFile, String",
        "caster": "video"
      },
      {
        "snake_name": "duration",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(duration&.to_i unless duration.nil?)"
      },
      {
        "snake_name": "width",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(width&.to_i unless width.nil?)"
      },
      {
        "snake_name": "height",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(height&.to_i unless height.nil?)"
      },
      {
        "snake_name": "caption",
        "required": false,
        "signature": "String, nil",
        "caster": "(caption&.to_s unless caption.nil?)"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply, nil",
        "caster": "(reply_markup unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendvoice",
    "snake_name": "send_voice",
    "camel_name": "sendVoice",
    "pascal_name": "SendVoice",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "voice",
        "required": true,
        "signature": "InputFile, String",
        "caster": "voice"
      },
      {
        "snake_name": "caption",
        "required": false,
        "signature": "String, nil",
        "caster": "(caption&.to_s unless caption.nil?)"
      },
      {
        "snake_name": "duration",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(duration&.to_i unless duration.nil?)"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply, nil",
        "caster": "(reply_markup unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendvideonote",
    "snake_name": "send_video_note",
    "camel_name": "sendVideoNote",
    "pascal_name": "SendVideoNote",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "video_note",
        "required": true,
        "signature": "InputFile, String",
        "caster": "video_note"
      },
      {
        "snake_name": "duration",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(duration&.to_i unless duration.nil?)"
      },
      {
        "snake_name": "length",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(length&.to_i unless length.nil?)"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply, nil",
        "caster": "(reply_markup unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendmediagroup",
    "snake_name": "send_media_group",
    "camel_name": "sendMediaGroup",
    "pascal_name": "SendMediaGroup",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "media",
        "required": true,
        "signature": "Array<InputMedia>",
        "caster": "media&.to_a&.map { |o| Types::InputMedia.new(**o.to_h) }"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      }
    ],
    "result_caster": "->(r) { r&.to_a&.map { |o| Types::Message.new(**o.to_h) } }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendlocation",
    "snake_name": "send_location",
    "camel_name": "sendLocation",
    "pascal_name": "SendLocation",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "latitude",
        "required": true,
        "signature": "Float",
        "caster": "latitude&.to_f"
      },
      {
        "snake_name": "longitude",
        "required": true,
        "signature": "Float",
        "caster": "longitude&.to_f"
      },
      {
        "snake_name": "live_period",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(live_period&.to_i unless live_period.nil?)"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply, nil",
        "caster": "(reply_markup unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#editmessagelivelocation",
    "snake_name": "edit_message_live_location",
    "camel_name": "editMessageLiveLocation",
    "pascal_name": "EditMessageLiveLocation",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": false,
        "signature": "Integer, String, nil",
        "caster": "(chat_id unless chat_id.nil?)"
      },
      {
        "snake_name": "message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(message_id&.to_i unless message_id.nil?)"
      },
      {
        "snake_name": "inline_message_id",
        "required": false,
        "signature": "String, nil",
        "caster": "(inline_message_id&.to_s unless inline_message_id.nil?)"
      },
      {
        "snake_name": "latitude",
        "required": true,
        "signature": "Float",
        "caster": "latitude&.to_f"
      },
      {
        "snake_name": "longitude",
        "required": true,
        "signature": "Float",
        "caster": "longitude&.to_f"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, nil",
        "caster": "(Types::InlineKeyboardMarkup.new(**reply_markup.to_h) unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { r }"
  },
  {
    "url": "https://core.telegram.org/bots/api#stopmessagelivelocation",
    "snake_name": "stop_message_live_location",
    "camel_name": "stopMessageLiveLocation",
    "pascal_name": "StopMessageLiveLocation",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": false,
        "signature": "Integer, String, nil",
        "caster": "(chat_id unless chat_id.nil?)"
      },
      {
        "snake_name": "message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(message_id&.to_i unless message_id.nil?)"
      },
      {
        "snake_name": "inline_message_id",
        "required": false,
        "signature": "String, nil",
        "caster": "(inline_message_id&.to_s unless inline_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, nil",
        "caster": "(Types::InlineKeyboardMarkup.new(**reply_markup.to_h) unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { r }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendvenue",
    "snake_name": "send_venue",
    "camel_name": "sendVenue",
    "pascal_name": "SendVenue",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "latitude",
        "required": true,
        "signature": "Float",
        "caster": "latitude&.to_f"
      },
      {
        "snake_name": "longitude",
        "required": true,
        "signature": "Float",
        "caster": "longitude&.to_f"
      },
      {
        "snake_name": "title",
        "required": true,
        "signature": "String",
        "caster": "title&.to_s"
      },
      {
        "snake_name": "address",
        "required": true,
        "signature": "String",
        "caster": "address&.to_s"
      },
      {
        "snake_name": "foursquare_id",
        "required": false,
        "signature": "String, nil",
        "caster": "(foursquare_id&.to_s unless foursquare_id.nil?)"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply, nil",
        "caster": "(reply_markup unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendcontact",
    "snake_name": "send_contact",
    "camel_name": "sendContact",
    "pascal_name": "SendContact",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "phone_number",
        "required": true,
        "signature": "String",
        "caster": "phone_number&.to_s"
      },
      {
        "snake_name": "first_name",
        "required": true,
        "signature": "String",
        "caster": "first_name&.to_s"
      },
      {
        "snake_name": "last_name",
        "required": false,
        "signature": "String, nil",
        "caster": "(last_name&.to_s unless last_name.nil?)"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply, nil",
        "caster": "(reply_markup unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendchataction",
    "snake_name": "send_chat_action",
    "camel_name": "sendChatAction",
    "pascal_name": "SendChatAction",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "action",
        "required": true,
        "signature": "String",
        "caster": "action&.to_s"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#getuserprofilephotos",
    "snake_name": "get_user_profile_photos",
    "camel_name": "getUserProfilePhotos",
    "pascal_name": "GetUserProfilePhotos",
    "parameters": [
      {
        "snake_name": "user_id",
        "required": true,
        "signature": "Integer",
        "caster": "user_id&.to_i"
      },
      {
        "snake_name": "offset",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(offset&.to_i unless offset.nil?)"
      },
      {
        "snake_name": "limit",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(limit&.to_i unless limit.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::UserProfilePhotos.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#getfile",
    "snake_name": "get_file",
    "camel_name": "getFile",
    "pascal_name": "GetFile",
    "parameters": [
      {
        "snake_name": "file_id",
        "required": true,
        "signature": "String",
        "caster": "file_id&.to_s"
      }
    ],
    "result_caster": "->(r) { Types::File.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#kickchatmember",
    "snake_name": "kick_chat_member",
    "camel_name": "kickChatMember",
    "pascal_name": "KickChatMember",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "user_id",
        "required": true,
        "signature": "Integer",
        "caster": "user_id&.to_i"
      },
      {
        "snake_name": "until_date",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(until_date&.to_i unless until_date.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#unbanchatmember",
    "snake_name": "unban_chat_member",
    "camel_name": "unbanChatMember",
    "pascal_name": "UnbanChatMember",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "user_id",
        "required": true,
        "signature": "Integer",
        "caster": "user_id&.to_i"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#restrictchatmember",
    "snake_name": "restrict_chat_member",
    "camel_name": "restrictChatMember",
    "pascal_name": "RestrictChatMember",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "user_id",
        "required": true,
        "signature": "Integer",
        "caster": "user_id&.to_i"
      },
      {
        "snake_name": "until_date",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(until_date&.to_i unless until_date.nil?)"
      },
      {
        "snake_name": "can_send_messages",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_send_messages unless can_send_messages.nil?)"
      },
      {
        "snake_name": "can_send_media_messages",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_send_media_messages unless can_send_media_messages.nil?)"
      },
      {
        "snake_name": "can_send_other_messages",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_send_other_messages unless can_send_other_messages.nil?)"
      },
      {
        "snake_name": "can_add_web_page_previews",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_add_web_page_previews unless can_add_web_page_previews.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#promotechatmember",
    "snake_name": "promote_chat_member",
    "camel_name": "promoteChatMember",
    "pascal_name": "PromoteChatMember",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "user_id",
        "required": true,
        "signature": "Integer",
        "caster": "user_id&.to_i"
      },
      {
        "snake_name": "can_change_info",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_change_info unless can_change_info.nil?)"
      },
      {
        "snake_name": "can_post_messages",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_post_messages unless can_post_messages.nil?)"
      },
      {
        "snake_name": "can_edit_messages",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_edit_messages unless can_edit_messages.nil?)"
      },
      {
        "snake_name": "can_delete_messages",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_delete_messages unless can_delete_messages.nil?)"
      },
      {
        "snake_name": "can_invite_users",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_invite_users unless can_invite_users.nil?)"
      },
      {
        "snake_name": "can_restrict_members",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_restrict_members unless can_restrict_members.nil?)"
      },
      {
        "snake_name": "can_pin_messages",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_pin_messages unless can_pin_messages.nil?)"
      },
      {
        "snake_name": "can_promote_members",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!can_promote_members unless can_promote_members.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#exportchatinvitelink",
    "snake_name": "export_chat_invite_link",
    "camel_name": "exportChatInviteLink",
    "pascal_name": "ExportChatInviteLink",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      }
    ],
    "result_caster": "->(r) { r&.to_s }"
  },
  {
    "url": "https://core.telegram.org/bots/api#setchatphoto",
    "snake_name": "set_chat_photo",
    "camel_name": "setChatPhoto",
    "pascal_name": "SetChatPhoto",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "photo",
        "required": true,
        "signature": "InputFile",
        "caster": "photo"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#deletechatphoto",
    "snake_name": "delete_chat_photo",
    "camel_name": "deleteChatPhoto",
    "pascal_name": "DeleteChatPhoto",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#setchattitle",
    "snake_name": "set_chat_title",
    "camel_name": "setChatTitle",
    "pascal_name": "SetChatTitle",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "title",
        "required": true,
        "signature": "String",
        "caster": "title&.to_s"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#setchatdescription",
    "snake_name": "set_chat_description",
    "camel_name": "setChatDescription",
    "pascal_name": "SetChatDescription",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "description",
        "required": false,
        "signature": "String, nil",
        "caster": "(description&.to_s unless description.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#pinchatmessage",
    "snake_name": "pin_chat_message",
    "camel_name": "pinChatMessage",
    "pascal_name": "PinChatMessage",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "message_id",
        "required": true,
        "signature": "Integer",
        "caster": "message_id&.to_i"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#unpinchatmessage",
    "snake_name": "unpin_chat_message",
    "camel_name": "unpinChatMessage",
    "pascal_name": "UnpinChatMessage",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#leavechat",
    "snake_name": "leave_chat",
    "camel_name": "leaveChat",
    "pascal_name": "LeaveChat",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#getchat",
    "snake_name": "get_chat",
    "camel_name": "getChat",
    "pascal_name": "GetChat",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      }
    ],
    "result_caster": "->(r) { Types::Chat.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#getchatadministrators",
    "snake_name": "get_chat_administrators",
    "camel_name": "getChatAdministrators",
    "pascal_name": "GetChatAdministrators",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      }
    ],
    "result_caster": "->(r) { r&.to_a&.map { |o| Types::ChatMember.new(**o.to_h) } }"
  },
  {
    "url": "https://core.telegram.org/bots/api#getchatmemberscount",
    "snake_name": "get_chat_members_count",
    "camel_name": "getChatMembersCount",
    "pascal_name": "GetChatMembersCount",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      }
    ],
    "result_caster": "->(r) { r&.to_i }"
  },
  {
    "url": "https://core.telegram.org/bots/api#getchatmember",
    "snake_name": "get_chat_member",
    "camel_name": "getChatMember",
    "pascal_name": "GetChatMember",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "user_id",
        "required": true,
        "signature": "Integer",
        "caster": "user_id&.to_i"
      }
    ],
    "result_caster": "->(r) { Types::ChatMember.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#setchatstickerset",
    "snake_name": "set_chat_sticker_set",
    "camel_name": "setChatStickerSet",
    "pascal_name": "SetChatStickerSet",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "sticker_set_name",
        "required": true,
        "signature": "String",
        "caster": "sticker_set_name&.to_s"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#deletechatstickerset",
    "snake_name": "delete_chat_sticker_set",
    "camel_name": "deleteChatStickerSet",
    "pascal_name": "DeleteChatStickerSet",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#answercallbackquery",
    "snake_name": "answer_callback_query",
    "camel_name": "answerCallbackQuery",
    "pascal_name": "AnswerCallbackQuery",
    "parameters": [
      {
        "snake_name": "callback_query_id",
        "required": true,
        "signature": "String",
        "caster": "callback_query_id&.to_s"
      },
      {
        "snake_name": "text",
        "required": false,
        "signature": "String, nil",
        "caster": "(text&.to_s unless text.nil?)"
      },
      {
        "snake_name": "show_alert",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!show_alert unless show_alert.nil?)"
      },
      {
        "snake_name": "url",
        "required": false,
        "signature": "String, nil",
        "caster": "(url&.to_s unless url.nil?)"
      },
      {
        "snake_name": "cache_time",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(cache_time&.to_i unless cache_time.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#editmessagetext",
    "snake_name": "edit_message_text",
    "camel_name": "editMessageText",
    "pascal_name": "EditMessageText",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": false,
        "signature": "Integer, String, nil",
        "caster": "(chat_id unless chat_id.nil?)"
      },
      {
        "snake_name": "message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(message_id&.to_i unless message_id.nil?)"
      },
      {
        "snake_name": "inline_message_id",
        "required": false,
        "signature": "String, nil",
        "caster": "(inline_message_id&.to_s unless inline_message_id.nil?)"
      },
      {
        "snake_name": "text",
        "required": true,
        "signature": "String",
        "caster": "text&.to_s"
      },
      {
        "snake_name": "parse_mode",
        "required": false,
        "signature": "String, nil",
        "caster": "(parse_mode&.to_s unless parse_mode.nil?)"
      },
      {
        "snake_name": "disable_web_page_preview",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_web_page_preview unless disable_web_page_preview.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, nil",
        "caster": "(Types::InlineKeyboardMarkup.new(**reply_markup.to_h) unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { r }"
  },
  {
    "url": "https://core.telegram.org/bots/api#editmessagecaption",
    "snake_name": "edit_message_caption",
    "camel_name": "editMessageCaption",
    "pascal_name": "EditMessageCaption",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": false,
        "signature": "Integer, String, nil",
        "caster": "(chat_id unless chat_id.nil?)"
      },
      {
        "snake_name": "message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(message_id&.to_i unless message_id.nil?)"
      },
      {
        "snake_name": "inline_message_id",
        "required": false,
        "signature": "String, nil",
        "caster": "(inline_message_id&.to_s unless inline_message_id.nil?)"
      },
      {
        "snake_name": "caption",
        "required": false,
        "signature": "String, nil",
        "caster": "(caption&.to_s unless caption.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, nil",
        "caster": "(Types::InlineKeyboardMarkup.new(**reply_markup.to_h) unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { r }"
  },
  {
    "url": "https://core.telegram.org/bots/api#editmessagereplymarkup",
    "snake_name": "edit_message_reply_markup",
    "camel_name": "editMessageReplyMarkup",
    "pascal_name": "EditMessageReplyMarkup",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": false,
        "signature": "Integer, String, nil",
        "caster": "(chat_id unless chat_id.nil?)"
      },
      {
        "snake_name": "message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(message_id&.to_i unless message_id.nil?)"
      },
      {
        "snake_name": "inline_message_id",
        "required": false,
        "signature": "String, nil",
        "caster": "(inline_message_id&.to_s unless inline_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, nil",
        "caster": "(Types::InlineKeyboardMarkup.new(**reply_markup.to_h) unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { r }"
  },
  {
    "url": "https://core.telegram.org/bots/api#deletemessage",
    "snake_name": "delete_message",
    "camel_name": "deleteMessage",
    "pascal_name": "DeleteMessage",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "message_id",
        "required": true,
        "signature": "Integer",
        "caster": "message_id&.to_i"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendsticker",
    "snake_name": "send_sticker",
    "camel_name": "sendSticker",
    "pascal_name": "SendSticker",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer, String",
        "caster": "chat_id"
      },
      {
        "snake_name": "sticker",
        "required": true,
        "signature": "InputFile, String",
        "caster": "sticker"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardRemove, ForceReply, nil",
        "caster": "(reply_markup unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#getstickerset",
    "snake_name": "get_sticker_set",
    "camel_name": "getStickerSet",
    "pascal_name": "GetStickerSet",
    "parameters": [
      {
        "snake_name": "name",
        "required": true,
        "signature": "String",
        "caster": "name&.to_s"
      }
    ],
    "result_caster": "->(r) { Types::StickerSet.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#uploadstickerfile",
    "snake_name": "upload_sticker_file",
    "camel_name": "uploadStickerFile",
    "pascal_name": "UploadStickerFile",
    "parameters": [
      {
        "snake_name": "user_id",
        "required": true,
        "signature": "Integer",
        "caster": "user_id&.to_i"
      },
      {
        "snake_name": "png_sticker",
        "required": true,
        "signature": "InputFile",
        "caster": "png_sticker"
      }
    ],
    "result_caster": "->(r) { Types::File.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#createnewstickerset",
    "snake_name": "create_new_sticker_set",
    "camel_name": "createNewStickerSet",
    "pascal_name": "CreateNewStickerSet",
    "parameters": [
      {
        "snake_name": "user_id",
        "required": true,
        "signature": "Integer",
        "caster": "user_id&.to_i"
      },
      {
        "snake_name": "name",
        "required": true,
        "signature": "String",
        "caster": "name&.to_s"
      },
      {
        "snake_name": "title",
        "required": true,
        "signature": "String",
        "caster": "title&.to_s"
      },
      {
        "snake_name": "png_sticker",
        "required": true,
        "signature": "InputFile, String",
        "caster": "png_sticker"
      },
      {
        "snake_name": "emojis",
        "required": true,
        "signature": "String",
        "caster": "emojis&.to_s"
      },
      {
        "snake_name": "contains_masks",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!contains_masks unless contains_masks.nil?)"
      },
      {
        "snake_name": "mask_position",
        "required": false,
        "signature": "MaskPosition, nil",
        "caster": "(Types::MaskPosition.new(**mask_position.to_h) unless mask_position.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#addstickertoset",
    "snake_name": "add_sticker_to_set",
    "camel_name": "addStickerToSet",
    "pascal_name": "AddStickerToSet",
    "parameters": [
      {
        "snake_name": "user_id",
        "required": true,
        "signature": "Integer",
        "caster": "user_id&.to_i"
      },
      {
        "snake_name": "name",
        "required": true,
        "signature": "String",
        "caster": "name&.to_s"
      },
      {
        "snake_name": "png_sticker",
        "required": true,
        "signature": "InputFile, String",
        "caster": "png_sticker"
      },
      {
        "snake_name": "emojis",
        "required": true,
        "signature": "String",
        "caster": "emojis&.to_s"
      },
      {
        "snake_name": "mask_position",
        "required": false,
        "signature": "MaskPosition, nil",
        "caster": "(Types::MaskPosition.new(**mask_position.to_h) unless mask_position.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#setstickerpositioninset",
    "snake_name": "set_sticker_position_in_set",
    "camel_name": "setStickerPositionInSet",
    "pascal_name": "SetStickerPositionInSet",
    "parameters": [
      {
        "snake_name": "sticker",
        "required": true,
        "signature": "String",
        "caster": "sticker&.to_s"
      },
      {
        "snake_name": "position",
        "required": true,
        "signature": "Integer",
        "caster": "position&.to_i"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#deletestickerfromset",
    "snake_name": "delete_sticker_from_set",
    "camel_name": "deleteStickerFromSet",
    "pascal_name": "DeleteStickerFromSet",
    "parameters": [
      {
        "snake_name": "sticker",
        "required": true,
        "signature": "String",
        "caster": "sticker&.to_s"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#answerinlinequery",
    "snake_name": "answer_inline_query",
    "camel_name": "answerInlineQuery",
    "pascal_name": "AnswerInlineQuery",
    "parameters": [
      {
        "snake_name": "inline_query_id",
        "required": true,
        "signature": "String",
        "caster": "inline_query_id&.to_s"
      },
      {
        "snake_name": "results",
        "required": true,
        "signature": "Array<InlineQueryResultArticle, InlineQueryResultPhoto, InlineQueryResultGif, InlineQueryResultMpeg4Gif, InlineQueryResultVideo, InlineQueryResultAudio, InlineQueryResultVoice, InlineQueryResultDocument, InlineQueryResultLocation, InlineQueryResultVenue, InlineQueryResultContact, InlineQueryResultGame, InlineQueryResultCachedPhoto, InlineQueryResultCachedGif, InlineQueryResultCachedMpeg4Gif, InlineQueryResultCachedSticker, InlineQueryResultCachedDocument, InlineQueryResultCachedVideo, InlineQueryResultCachedVoice, InlineQueryResultCachedAudio>",
        "caster": "results&.to_a&.map { |o| o }"
      },
      {
        "snake_name": "cache_time",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(cache_time&.to_i unless cache_time.nil?)"
      },
      {
        "snake_name": "is_personal",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!is_personal unless is_personal.nil?)"
      },
      {
        "snake_name": "next_offset",
        "required": false,
        "signature": "String, nil",
        "caster": "(next_offset&.to_s unless next_offset.nil?)"
      },
      {
        "snake_name": "switch_pm_text",
        "required": false,
        "signature": "String, nil",
        "caster": "(switch_pm_text&.to_s unless switch_pm_text.nil?)"
      },
      {
        "snake_name": "switch_pm_parameter",
        "required": false,
        "signature": "String, nil",
        "caster": "(switch_pm_parameter&.to_s unless switch_pm_parameter.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendinvoice",
    "snake_name": "send_invoice",
    "camel_name": "sendInvoice",
    "pascal_name": "SendInvoice",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer",
        "caster": "chat_id&.to_i"
      },
      {
        "snake_name": "title",
        "required": true,
        "signature": "String",
        "caster": "title&.to_s"
      },
      {
        "snake_name": "description",
        "required": true,
        "signature": "String",
        "caster": "description&.to_s"
      },
      {
        "snake_name": "payload",
        "required": true,
        "signature": "String",
        "caster": "payload&.to_s"
      },
      {
        "snake_name": "provider_token",
        "required": true,
        "signature": "String",
        "caster": "provider_token&.to_s"
      },
      {
        "snake_name": "start_parameter",
        "required": true,
        "signature": "String",
        "caster": "start_parameter&.to_s"
      },
      {
        "snake_name": "currency",
        "required": true,
        "signature": "String",
        "caster": "currency&.to_s"
      },
      {
        "snake_name": "prices",
        "required": true,
        "signature": "Array<LabeledPrice>",
        "caster": "prices&.to_a&.map { |o| Types::LabeledPrice.new(**o.to_h) }"
      },
      {
        "snake_name": "provider_data",
        "required": false,
        "signature": "String, nil",
        "caster": "(provider_data&.to_s unless provider_data.nil?)"
      },
      {
        "snake_name": "photo_url",
        "required": false,
        "signature": "String, nil",
        "caster": "(photo_url&.to_s unless photo_url.nil?)"
      },
      {
        "snake_name": "photo_size",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(photo_size&.to_i unless photo_size.nil?)"
      },
      {
        "snake_name": "photo_width",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(photo_width&.to_i unless photo_width.nil?)"
      },
      {
        "snake_name": "photo_height",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(photo_height&.to_i unless photo_height.nil?)"
      },
      {
        "snake_name": "need_name",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!need_name unless need_name.nil?)"
      },
      {
        "snake_name": "need_phone_number",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!need_phone_number unless need_phone_number.nil?)"
      },
      {
        "snake_name": "need_email",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!need_email unless need_email.nil?)"
      },
      {
        "snake_name": "need_shipping_address",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!need_shipping_address unless need_shipping_address.nil?)"
      },
      {
        "snake_name": "is_flexible",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!is_flexible unless is_flexible.nil?)"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, nil",
        "caster": "(Types::InlineKeyboardMarkup.new(**reply_markup.to_h) unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#answershippingquery",
    "snake_name": "answer_shipping_query",
    "camel_name": "answerShippingQuery",
    "pascal_name": "AnswerShippingQuery",
    "parameters": [
      {
        "snake_name": "shipping_query_id",
        "required": true,
        "signature": "String",
        "caster": "shipping_query_id&.to_s"
      },
      {
        "snake_name": "ok",
        "required": true,
        "signature": "Boolean",
        "caster": "(!!ok unless ok.nil?)"
      },
      {
        "snake_name": "shipping_options",
        "required": false,
        "signature": "Array<ShippingOption>, nil",
        "caster": "(shipping_options&.to_a&.map { |o| Types::ShippingOption.new(**o.to_h) } unless shipping_options.nil?)"
      },
      {
        "snake_name": "error_message",
        "required": false,
        "signature": "String, nil",
        "caster": "(error_message&.to_s unless error_message.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#answerprecheckoutquery",
    "snake_name": "answer_pre_checkout_query",
    "camel_name": "answerPreCheckoutQuery",
    "pascal_name": "AnswerPreCheckoutQuery",
    "parameters": [
      {
        "snake_name": "pre_checkout_query_id",
        "required": true,
        "signature": "String",
        "caster": "pre_checkout_query_id&.to_s"
      },
      {
        "snake_name": "ok",
        "required": true,
        "signature": "Boolean",
        "caster": "(!!ok unless ok.nil?)"
      },
      {
        "snake_name": "error_message",
        "required": false,
        "signature": "String, nil",
        "caster": "(error_message&.to_s unless error_message.nil?)"
      }
    ],
    "result_caster": "->(r) { (!!r unless r.nil?) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#sendgame",
    "snake_name": "send_game",
    "camel_name": "sendGame",
    "pascal_name": "SendGame",
    "parameters": [
      {
        "snake_name": "chat_id",
        "required": true,
        "signature": "Integer",
        "caster": "chat_id&.to_i"
      },
      {
        "snake_name": "game_short_name",
        "required": true,
        "signature": "String",
        "caster": "game_short_name&.to_s"
      },
      {
        "snake_name": "disable_notification",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_notification unless disable_notification.nil?)"
      },
      {
        "snake_name": "reply_to_message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(reply_to_message_id&.to_i unless reply_to_message_id.nil?)"
      },
      {
        "snake_name": "reply_markup",
        "required": false,
        "signature": "InlineKeyboardMarkup, nil",
        "caster": "(Types::InlineKeyboardMarkup.new(**reply_markup.to_h) unless reply_markup.nil?)"
      }
    ],
    "result_caster": "->(r) { Types::Message.new(**r.to_h) }"
  },
  {
    "url": "https://core.telegram.org/bots/api#setgamescore",
    "snake_name": "set_game_score",
    "camel_name": "setGameScore",
    "pascal_name": "SetGameScore",
    "parameters": [
      {
        "snake_name": "user_id",
        "required": true,
        "signature": "Integer",
        "caster": "user_id&.to_i"
      },
      {
        "snake_name": "score",
        "required": true,
        "signature": "Integer",
        "caster": "score&.to_i"
      },
      {
        "snake_name": "force",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!force unless force.nil?)"
      },
      {
        "snake_name": "disable_edit_message",
        "required": false,
        "signature": "Boolean, nil",
        "caster": "(!!disable_edit_message unless disable_edit_message.nil?)"
      },
      {
        "snake_name": "chat_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(chat_id&.to_i unless chat_id.nil?)"
      },
      {
        "snake_name": "message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(message_id&.to_i unless message_id.nil?)"
      },
      {
        "snake_name": "inline_message_id",
        "required": false,
        "signature": "String, nil",
        "caster": "(inline_message_id&.to_s unless inline_message_id.nil?)"
      }
    ],
    "result_caster": "->(r) { r }"
  },
  {
    "url": "https://core.telegram.org/bots/api#getgamehighscores",
    "snake_name": "get_game_high_scores",
    "camel_name": "getGameHighScores",
    "pascal_name": "GetGameHighScores",
    "parameters": [
      {
        "snake_name": "user_id",
        "required": true,
        "signature": "Integer",
        "caster": "user_id&.to_i"
      },
      {
        "snake_name": "chat_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(chat_id&.to_i unless chat_id.nil?)"
      },
      {
        "snake_name": "message_id",
        "required": false,
        "signature": "Integer, nil",
        "caster": "(message_id&.to_i unless message_id.nil?)"
      },
      {
        "snake_name": "inline_message_id",
        "required": false,
        "signature": "String, nil",
        "caster": "(inline_message_id&.to_s unless inline_message_id.nil?)"
      }
    ],
    "result_caster": "->(r) { r&.to_a&.map { |o| Types::GameHighScore.new(**o.to_h) } }"
  }
]